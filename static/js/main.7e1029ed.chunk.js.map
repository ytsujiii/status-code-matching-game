{"version":3,"sources":["images/face_down.png","Card.tsx","Game.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","card","width","height","faceUp","border","borderRadius","display","flexDirection","justifyContent","alignContent","textAlign","faceDown","removed","backgroundColor","color","header","flex","alignItems","body","description","padding","fontSize","Card","props","state","onClick","useState","trimmedBody","setTrimmedBody","classes","useEffect","length","trimmed","substring","descriptionLength","className","clsx","draggable","src","FaceDownCardImg","alt","shuffle","arr","i","j","Math","floor","random","tmp","statusCodeIndexes","Array","from","statusCodes","_","idx","root","gridWrapper","gridTemplateColumns","Game","cards","setCards","faceUpCards","setFaceUpCards","faceUpCardCount","setFaceUpCardCount","cardsRef","useRef","initialCardData","slice","forEach","statusCodeIdx","push","id","code","toString","note","filter","current","c1","c2","setTimeout","map","onCardClicked","useCallback","cardId","newCards","onScreenClicked","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e1029ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/face_down.ff67b45d.png\";","import { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { Card as CardType } from './constants/Card';\nimport FaceDownCardImg from './images/face_down.png';\n\nconst useStyles = makeStyles({\n  card: {\n    width: 120,\n    height: 188,\n  },\n  faceUp: {\n    border: '1px solid black',\n    borderRadius: 3,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignContent: 'center',\n    textAlign: 'center',\n  },\n  faceDown: {\n    width: '100%',\n  },\n  removed: {\n    backgroundColor: 'lightgray',\n    color: 'gray',\n  },\n  header: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  body: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  description: {\n    padding: 6,\n    alignItems: 'center',\n    fontSize: 10,\n  },\n});\n\nexport default function Card(props: CardType): React.ReactElement {\n  const { header, body, state, onClick } = props;\n  const [trimmedBody, setTrimmedBody] = useState<string>();\n  const descriptionLength = 130;\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (body.length <= descriptionLength) {\n      setTrimmedBody(body);\n    } else {\n      const trimmed = body.substring(0, descriptionLength - 1) + '…';\n      setTrimmedBody(trimmed);\n    }\n  }, [body]);\n\n  if (state === 'removed') {\n    if (header) {\n      return (\n        <div onClick={onClick} className={clsx([classes.card, classes.faceUp, classes.removed])} draggable={false}>\n          <div className={classes.header}>{header}</div>\n          <div className={classes.body}>{body}</div>\n        </div>\n      );\n    } else {\n      return (\n        <div onClick={onClick} className={clsx([classes.card, classes.faceUp, classes.removed])}>\n          <div className={clsx([classes.body, classes.description])}>{trimmedBody}</div>\n        </div>\n      );\n    }\n  } else if (state === 'faceDown') {\n    return (\n      <div className={classes.card}>\n        <img onClick={onClick} className={classes.faceDown} src={FaceDownCardImg} alt=\"\" draggable={false} />\n      </div>\n    );\n  } else if (header) {\n    return (\n      <div onClick={onClick} className={clsx([classes.card, classes.faceUp])} draggable={false}>\n        <div className={classes.header}>{header}</div>\n        <div className={classes.body}>{body}</div>\n      </div>\n    );\n  } else {\n    return (\n      <div onClick={onClick} className={clsx([classes.card, classes.faceUp])}>\n        <div className={clsx([classes.body, classes.description])}>{trimmedBody}</div>\n      </div>\n    );\n  }\n}\n","import { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Card from './Card';\nimport { Card as CardType } from './constants/Card';\nimport { LocaleCode } from './constants/Locale';\nimport statusCodes from './status_codes.json';\n\n// Fisher-Yates shuffle\nconst shuffle = (arr: Array<any>): void => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n};\nconst localeCode: LocaleCode = 'ja-JP';\nconst statusCodeCount = 10;\nconst statusCodeIndexes: number[] = Array.from(Array(statusCodes.length), (_, idx) => idx);\nshuffle(statusCodeIndexes);\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n  },\n  gridWrapper: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(10, 1fr)',\n  },\n});\n\nexport default function Game(): React.ReactElement {\n  const [cards, setCards] = useState<CardType[]>([]);\n  const [faceUpCards, setFaceUpCards] = useState<CardType[]>([]);\n  const [faceUpCardCount, setFaceUpCardCount] = useState<number>(0);\n  const cardsRef = useRef<CardType[]>([]);\n  useEffect(() => {\n    const initialCardData: CardType[] = [];\n    statusCodeIndexes.slice(0, statusCodeCount).forEach((statusCodeIdx) => {\n      // コードと短い説明のカード\n      initialCardData.push({\n        id: statusCodes[statusCodeIdx].code,\n        header: statusCodes[statusCodeIdx].code.toString(),\n        body: statusCodes[statusCodeIdx].note,\n        state: 'faceDown',\n      });\n      // 詳細説明のカード\n      initialCardData.push({\n        id: 1000 + statusCodes[statusCodeIdx].code,\n        body: statusCodes[statusCodeIdx].description[localeCode],\n        state: 'faceDown',\n      });\n    });\n    setCards(initialCardData);\n    shuffle(initialCardData);\n  }, []);\n  useEffect(() => {\n    setFaceUpCards(cards.filter((card) => card.state === 'faceUp'));\n    cardsRef.current = cards;\n  }, [cards]);\n  useEffect(() => {\n    setFaceUpCardCount(faceUpCards.length);\n  }, [faceUpCards]);\n  useEffect(() => {\n    if (faceUpCards.length !== 2) return;\n\n    const c1 = faceUpCards[0];\n    const c2 = faceUpCards[1];\n    if (c1.id % 1000 === c2.id % 1000) {\n      // ステータスコードがそろった\n      setTimeout(() => {\n        setCards(\n          cardsRef.current.map((card) => {\n            if (card.id === c1.id || card.id === c2.id) {\n              return { ...card, state: 'removed' };\n            } else {\n              return card;\n            }\n          })\n        );\n      }, 300);\n    }\n  }, [faceUpCards, faceUpCardCount]);\n\n  const onCardClicked = useCallback(\n    (cardId: number): void => {\n      if (faceUpCardCount >= 2 || faceUpCardCount < 0) {\n        return;\n      }\n      // 1枚目と同じカードをめくった\n      if (faceUpCardCount === 1 && faceUpCards[0].id === cardId) {\n        setCards(\n          cardsRef.current.map((card) => {\n            if (card.id !== cardId) return card;\n            else return { ...card, state: 'faceDown' };\n          })\n        );\n        return;\n      }\n\n      const newCards: CardType[] = cardsRef.current.map((card) => {\n        if (card.id !== cardId) return card;\n        return { ...card, state: 'faceUp' };\n      });\n      setCards(newCards);\n    },\n    [faceUpCardCount]\n  );\n\n  const onScreenClicked = useCallback(() => {\n    if (faceUpCardCount !== 2) return;\n\n    const c1 = faceUpCards[0];\n    const c2 = faceUpCards[1];\n    setCards(\n      cardsRef.current.map((card) => {\n        if (card.id === c1.id || card.id === c2.id) {\n          return { ...card, state: 'faceDown' };\n        } else {\n          return card;\n        }\n      })\n    );\n  }, [faceUpCards, faceUpCardCount]);\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root} onClick={onScreenClicked}>\n      <div className={classes.gridWrapper}>\n        {cards.map((card) => (\n          <Card key={card.id} {...card} onClick={() => onCardClicked(card.id)} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Game from './Game';\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}